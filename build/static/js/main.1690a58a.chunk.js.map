{"version":3,"sources":["components/Card/Card.module.scss","components/Banner/Banner.module.scss","components/Wrapper/Wrapper.module.scss","components/Card/logo.svg","components/FormSearch/FormSearch.module.scss","components/Banner/Banner.tsx","components/Wrapper/Wrapper.tsx","utils/classNames.ts","components/Card/Card.tsx","components/FormSearch/FormSearch.tsx","pages/Home.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Banner","title","description","className","classes","banner","Wrapper","children","wrapper","ClassNames","classNames","Object","keys","filter","key","join","Card","info","slider","photos","addPictureToFav","card","padding","header","dark","titleWrapper","circleWrapper","circle","contentWrapper","slideInfo","imagesWrapper","map","item","index","imageLink","pageURL","onClick","largeImageURL","user","id","handleFavoris","src","alt","effect","placeholderSrc","logo","badge","FormSearch","handleSubmit","handleOnChange","value","form","onSubmit","type","onChange","placeholder","Home","useState","query","setQuery","favoris","setFavoris","searchResulst","setSearchResulst","urlBuilder","cleanQuery","replace","fetchHelper","url","a","fetch","response","json","data","handleGetImages","querys","split","q","slice","urls","length","Promise","all","then","res","hits","storedData","JSON","parse","localStorage","getItem","useEffect","newFav","add","find","element","setItem","stringify","navigator","onLine","style","color","fontWeight","e","target","preventDefault","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1690a58a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"slider\":\"Card_slider__3ZHeA\",\"padding\":\"Card_padding__2oKA3\",\"header\":\"Card_header__21_95\",\"dark\":\"Card_dark__2SOzS\",\"title\":\"Card_title__Ip0in\",\"info\":\"Card_info__2y6Wt\",\"description\":\"Card_description__33vK6\",\"slideInfo\":\"Card_slideInfo__2LtFH\",\"imagesWrapper\":\"Card_imagesWrapper__3Un2Q\",\"imageLink\":\"Card_imageLink__1xuVJ\",\"badge\":\"Card_badge__21uzr\",\"contentWrapper\":\"Card_contentWrapper__2ihG_\",\"circleWrapper\":\"Card_circleWrapper__8ixX_\",\"circle\":\"Card_circle__13fGr\",\"titleWrapper\":\"Card_titleWrapper__3Y5f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__Lcs5E\",\"title\":\"Banner_title__3r7KR\",\"description\":\"Banner_description__1Nczt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__2gcWR\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSearch_form__2jriS\"};","import React from \"react\";\nimport classes from \"./Banner.module.scss\";\n\ninterface Props {\n  title: string;\n  description: string;\n}\n\nconst Banner: React.FC<Props> = ({ title, description }) => {\n  return (\n    <div className={classes.banner}>\n      <h1 className={classes.title}>{title}</h1>\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport classes from \"./Wrapper.module.scss\";\n\nconst Wrapper: React.FC = ({ children }) => {\n  return <div className={classes.wrapper}>{children}</div>;\n};\n\nexport default Wrapper;\n","interface ClassNamesObject {\n  [key: string]: boolean;\n}\n\nconst ClassNames = (classNames: ClassNamesObject): string => {\n  return Object.keys(classNames)\n    .filter((key) => classNames[key])\n    .join(\" \");\n};\n\nexport default ClassNames;\n","import React, { useState, useEffect } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\n\nimport { ImgData } from \"../../pages/Home\";\nimport ClassNames from \"../../utils/classNames\";\nimport classes from \"./Card.module.scss\";\nimport {_myFav} from '../../types'\nimport logo from \"./logo.svg\";\n\ninterface Props {\n  title: string;\n  info?: string;\n  description?: string;\n  slider?: boolean;\n  photos?: ImgData[];\n  addPictureToFav? : (newFav: _myFav) => void\n}\n\nconst Card: React.FC<Props> = ({\n  title,\n  info,\n  description,\n  slider,\n  photos,\n  children,\n  addPictureToFav\n}) => {\n\n   const handleFavoris = (item: any) => {\n     if (addPictureToFav) {addPictureToFav({\n      pageURL: item.pageURL,\n      largeImageURL: item.largeImageURL,\n      user: item.user,\n      id: item.id\n     })}\n  }\n\n  return (\n    <div\n      className={ClassNames({\n        [classes.card]: true,\n        [classes.padding]: !slider,\n        [classes.slider]: !!slider,\n      })}\n    >\n      <header\n        className={ClassNames({\n          [classes.header]: true,\n          [classes.dark]: !!slider,\n        })}\n      >\n        <div className={classes.titleWrapper}>\n          {slider && (\n            <div className={classes.circleWrapper}>\n              <div className={classes.circle} />\n            </div>\n          )}\n          <h2 className={classes.title}>{title}</h2>\n        </div>\n        {info && <p className={classes.info}>{info}</p>}\n      </header>\n      <div\n        className={ClassNames({\n          [classes.contentWrapper]: !!slider,\n        })}\n      >\n        {description && (\n          <p\n            className={ClassNames({\n              [classes.description]: !slider,\n              [classes.slideInfo]: !!slider,\n            })}\n          >\n            {description}\n          </p>\n        )}\n        {slider && photos && (\n          <div className={classes.imagesWrapper}>\n            {photos.map((item, index) => (\n              <a\n                className={classes.imageLink}\n                // href={item.pageURL}\n                // target=\"__blank\"\n                key={item.pageURL}\n                onClick={() => handleFavoris(item) }\n              >\n                <LazyLoadImage\n                  src={item.largeImageURL}\n                  alt={item.user}\n                  effect=\"blur\"\n                  placeholderSrc={logo}\n                />\n                <p className={classes.badge}>{item.user}</p>\n              </a>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport classes from \"./FormSearch.module.scss\";\n\ninterface Props {\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  handleOnChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n}\n\nconst FormSearch: React.FC<Props> = ({\n  handleSubmit,\n  handleOnChange,\n  value,\n}) => {\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleOnChange}\n        placeholder=\"Saisir une recherche...\"\n      />\n      <button type=\"submit\">Chercher</button>\n    </form>\n  );\n};\n\nexport default FormSearch;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header/Header\";\nimport Banner from \"../components/Banner/Banner\";\nimport Wrapper from \"../components/Wrapper/Wrapper\";\nimport Card from \"../components/Card/Card\";\nimport FormSearch from \"../components/FormSearch/FormSearch\";\n\nimport { _myFav } from \"../types\";\nexport interface ImgData {\n  largeImageURL: string;\n  pageURL: string;\n  user: string;\n}\n\ninterface resData {\n  title: string;\n  photos: ImgData[];\n}\n\nconst Home = () => {\n  const [query, setQuery] = useState(\"covid, silicon valley, computer\");\n  const [favoris, setFavoris] = useState<Array<_myFav>>([]);\n  const [searchResulst, setSearchResulst] = useState<resData[]>([]);\n\n  const urlBuilder = (query: string) => {\n    let cleanQuery = query.replace(/ /g, \"+\");\n\n    const key = \"18992981-a4be0aaec3c7abcbbb0667425\";\n    const type = \"photo\";\n    const url = `https://pixabay.com/api/?key=${key}&image_type=${type}&q=${cleanQuery}`;\n\n    return url;\n  };\n\n  const fetchHelper = async (url: string) => {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  };\n\n  const handleGetImages = async () => {\n    const querys = query\n      .split(\",\")\n      .filter((q) => q !== \"\" && q !== \" \" && q)\n      .map((q) => {\n        if (q[0] === \" \") {\n          return q.slice(1);\n        }\n        return q;\n      });\n\n    const urls = querys.map((query) => urlBuilder(query));\n    if (urls.length > 0) {\n      Promise.all(urls.map((url) => fetchHelper(url))).then((res) => {\n        const data = res.map((item, index) => {\n          const album = {\n            title: querys[index],\n            photos: item.hits,\n          };\n          return album;\n        });\n        if (storedData) {\n              setFavoris(JSON.parse(storedData))\n        }\n\n        setSearchResulst(data);\n      });\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleGetImages();\n  };\n\nconst storedData = localStorage.getItem('favoris')\n  useEffect(() => {\n    handleGetImages();\n    \n/*     if (storedData) {\n      JSON.parse(storedData).map((data: any) => {\n          setFavoris([...favoris, data])\n      }) */\n        // setFavoris([...favoris, JSON.parse(storedData)]) \n  /*      }  */  \n/*     if (favoris) {\n      setFavoris(favoris);\n    } */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const addPictureToFav = (newFav: _myFav) => {\n    let add = true;\n\n    favoris.find((element) => {\n      if (element.id === newFav.id) add = false;\n    });\n    if (add === true) {\n      setFavoris([...favoris, newFav]);\n      localStorage.setItem('favoris', JSON.stringify([...favoris, newFav]));\n    }\n    \n  };\n\n  return (\n    <>\n      {navigator.onLine ? (\n        <div style={{ color: \"green\", fontWeight: \"bold\" }}>\n          Vous êtes en ligne{\" \"}\n        </div>\n      ) : (\n        <div style={{ color: \"red\", fontWeight: \"bold\" }}>\n          Vous êtes hors-ligne\n        </div>\n      )}\n      <Banner\n        title=\"YnovGalery!\"\n        description=\"Cette app utilise Pixabay API.\"\n      />\n      <Card\n        title=\"Mode d'emploi?\"\n        description='🎉 Séparez par \",\" chaque recherche. Vous pouvez chercher plusieurs catégories d`images en même temps. Exemple: \"chiens, rose jaune, voiture rouge\" 🎉, Selectionnez une image pour afin de l`ajouter à vos favoris.'\n      >\n        <FormSearch\n          value={query}\n          handleOnChange={handleOnChange}\n          handleSubmit={handleSubmit}\n        />\n      </Card>\n      <Wrapper>\n        {favoris.length ? (\n          <Card\n            slider\n            description=\"Retrouvez ici les images que vous avez ajouter à vos favoris.\"\n            title=\"FAVORIS\"\n            photos={favoris}\n          />\n        ) : (\n          <></>\n        )}\n        {searchResulst.map((item, index) => (\n          <Card\n            key={index}\n            slider\n            title={item.title}\n            photos={item.photos}\n            addPictureToFav={addPictureToFav}\n          />\n        ))}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst App: React.FC = () => <Home />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if ('serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n\n\n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { servicesVersion } from \"typescript\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker'\nimport \"./styles/globalStyles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register()"],"sourceRoot":""}